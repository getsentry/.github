name: Validate new issue - test
on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.PAT }}
jobs:
  case_1:
    name: "It skips validation for Sentry org members."
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: test
      run: |
        issue_number=$(
          basename $(
            gh issue create --title "Greetings, program!" --body "This is an issue, clearly."
          )
        )
        .github/workflows/test-helpers/get-issue-validation-log "${issue_number}"
        grep "Skipping validation" log
  case_2:
    name: "It runs non-member issues through validation."
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: setup
      name: setup
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_NONMEMBER }}
      run: |  
        issue_number=$(
          basename $(
            gh issue create --title "Greetings, program!" \
              --body "
        ### Environment

        foo

        ### Steps to Reproduce

        bar

        ### Expected Result

        buz

        ### Actual Result

        blah
        "
          )
        )
        echo "::set-output name=issue_number::${issue_number}"
    - name: test
      run: |
        issue_number="${{ steps.setup.outputs.issue_number }}"
        .github/workflows/test-helpers/get-issue-validation-log "${issue_number}"
        grep "sentry-test-fixture-nonmember is not a member of the getsentry org." log
        grep "BUG_REPORT.md? 👍 💃" log
  case_3:
    name: "It is flexible about header order and extra headers."
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: setup
      name: setup
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_NONMEMBER }}
      run: |  
        issue_number=$(
          basename $(
            gh issue create --title "Greetings, program!" \
              --body "
        ### Preamble
        ### Steps to Reproduce
        ### Expected Result
        ### Actual Result
        ### Environment
        ### Postamble
        "
          )
        )
        echo "::set-output name=issue_number::${issue_number}"
    - name: test
      run: |
        issue_number="${{ steps.setup.outputs.issue_number }}"
        .github/workflows/test-helpers/get-issue-validation-log "${issue_number}"
        grep "BUG_REPORT.md? 👍 💃" log
